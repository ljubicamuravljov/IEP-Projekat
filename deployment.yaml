version: '3'

services:
  adminer:
    image: adminer
    ports:
      - 8080:8080
    networks:
      - authNet
      - shopNet
      - blockNet

  #===================================================================================
  authenticationDB:
    image: mysql
    environment:
      - MYSQL_ROOT_PASSWORD=123python main.py --type level2 --with-authentication --authentication-url http://127.0.0.1:5002 --owner-url http://127.0.0.1:5000 --customer-url http://127.0.0.1:5001 --courier-url http://127.0.0.1:5003 --with-blockchain --provider-url http://127.0.0.1:8545 --customer-keys-path ./keys.json --customer-passphrase iep_project --owner-private-key 0x36235650a86b1a3bde55bdbec6534e0cc381cfb4583e5aeaf7bf460f3a61db2e --courier-private-key 0x0b09208c2c4b83ac069b0abe853ef4d158fed8371ccc8c6ff711166a0d3a71c1

    healthcheck:
      test: ["CMD","mysqladmin","ping","-h","localhost"]
      timeout: 10s
      retries: 10
    volumes:
      - authData:/var/lib/mysql
    networks:
      - authNet
  authenticationDBMigration:
    image: authmigration
    environment:
      - DATABASE_URL=authenticationDB
    depends_on:
      - authenticationDB
    restart: on-failure
    networks:
      - authNet
  authentication:
    image: authentication
    environment:
      - DATABASE_URL=authenticationDB
    depends_on:
      - authenticationDBMigration
    ports:
      - 5002:5002
    networks:
      - authNet

  #===================================================================================

  spark-master:
    image: bde2020/spark-master:3.3.0-hadoop3.3
    container_name: spark-master
    ports:
      - 8085:8080
      - 7077:7077
    environment:
      - INIT_DAEMON_STEP=setup_spark
#    depends_on:
#      - shopDBmigration
    networks:
      - sparkNet

  spark-worker-1:
    image: bde2020/spark-worker:3.3.0-hadoop3.3
    container_name: spark-worker-1
    depends_on:
      - spark-master
    ports:
      - 8081:8081
    environment:
      - SPARK_MASTER=spark://spark-master:7077
    networks:
      - sparkNet

#  spark-worker-2:
#    image: bde2020/spark-worker:3.3.0-hadoop3.3
#    container_name: spark-worker-2
#    depends_on:
#      - spark-master
#    ports:
#      - 8082:8081
#    environment:
#      - SPARK_MASTER=spark://spark-master:7077
#    networks:
#      - sparkNet

  sparkapp:
    image: statistics
    environment:
      - PRODUCTION=True
#      - SOCKET_IP=0.0.0.0
#      - SOCKET_PORT=9090
      - SPARKAPP_IP=sparkapp
      - DATABASE_URL=shopAppDB
      - ENABLE_INIT_DEAMON=false
    restart: on-failure
    depends_on:
      - spark-master
      - spark-worker-1
    ports:
      - 5004:5004
    networks:
      - sparkNet

  #===================================================================================
  shopAppDB:
    image: mysql
    environment:
      - MYSQL_ROOT_PASSWORD=root
    ports:
      - "3307:3306"

#      - sparknetwork
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost" ]
      timeout: 10s
      retries: 10
    volumes:
      - shopData:/var/lib/mysql
    networks:
      - shopNet
      - sparkNet

  shopDBmigration:
    image: shopmigration
    environment:
      - DATABASE_URL=shopAppDB
    depends_on:
      shopAppDB:
        condition: service_healthy
    networks:
      - shopNet
      - sparkNet
#    build:
#      context: .
#      dockerfile: shopdbmigration.dockerfile

  owner:
    image: owner
#    container_name: owner
    environment:
      - DATABASE_URL=shopAppDB
      - SPARKAPP_URL=sparkapp
      - BLOCKCHAIN_URL=blockchain
    depends_on:
      - shopDBmigration
      - sparkapp
    ports:
      - 5000:5000
    restart: on-failure
    networks:
      - shopNet
      - sparkNet
      - blockNet
#    build:
#      context: .
#      dockerfile: owner.dockerfile
  customer:
    image: customer
#    container_name: owner
    environment:
      - DATABASE_URL=shopAppDB
      - SPARKAPP_URL=sparkapp
      - BLOCKCHAIN_URL=blockchain
    restart: on-failure
    depends_on:
      - shopDBmigration
      - sparkapp
    ports:
      - 5001:5001
    networks:
      - shopNet
      - sparkNet
      - blockNet
#    build:
#      context: .
#      dockerfile: owner.dockerfile

  courier:
    image: courier
#    container_name: owner
    environment:
      - DATABASE_URL=shopAppDB
      - SPARKAPP_URL=sparkapp
      - BLOCKCHAIN_URL=blockchain
    restart: on-failure
    depends_on:
      - shopDBmigration
      - sparkapp
    ports:
      - 5003:5003
    networks:
      - shopNet
      - sparkNet
      - blockNet

  blockchain:
    image: trufflesuite/ganache-cli
    ports:
      - "8545:8545"
    networks:
      - blockNet


volumes:
  authData:
  shopData:

networks:

  sparkNet:
  authNet:
  shopNet:
  blockNet: