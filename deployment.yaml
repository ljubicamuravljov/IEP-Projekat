version: '3'

services:
  authenticationDB:
    image: mysql
    environment:
      - MYSQL_ROOT_PASSWORD=123
    healthcheck:
      test: ["CMD","mysqladmin","ping","-h","localhost"]
      timeout: 10s
      retries: 10
    volumes:
      - authData:/var/lib/mysql
    networks:
      - authNet
  authenticationDBMigration:
    image: authmigration
    environment:
      - DATABASE_URL=authenticationDB
    depends_on:
      - authenticationDB
    networks:
      - authNet
  authentication:
    image: authentication
    environment:
      - DATABASE_URL=authenticationDB
    depends_on:
      - authenticationDBMigration
    ports:
      - 5002:5002
    networks:
      - authNet

  shopAppDB:
    image: mysql
    environment:
      - MYSQL_ROOT_PASSWORD=123
    ports:
      - "3307:3306"

#      - sparknetwork
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost" ]
      timeout: 10s
      retries: 10
    volumes:
      - shopData:/var/lib/mysql
    networks:
      - shopNet

  shopDBmigration:
    image: shopmigration
    environment:
      - DATABASE_URL=shopAppDB
    depends_on:
      - shopAppDB
      #  condition: service_healthy
    networks:
      - shopNet
#    build:
#      context: .
#      dockerfile: shopdbmigration.dockerfile

  owner:
    image: owner
#    container_name: owner
    environment:
      - DATABASE_URL=shopAppDB
#      - SPARKAPP_URL=sparkapp
#      - ETH_URL=blockchain
    depends_on:
      - shopDBmigration
#      - sparkapp
    ports:
      - 5000:5000
    networks:
      - shopNet
#      - sparknetwork
#      - ethnetwork
#    build:
#      context: .
#      dockerfile: owner.dockerfile
  customer:
    image: customer
#    container_name: owner
    environment:
      - DATABASE_URL=shopAppDB
#      - SPARKAPP_URL=sparkapp
#      - ETH_URL=blockchain
    depends_on:
      - shopDBmigration
#      - sparkapp
    ports:
      - 5001:5001
    networks:
      - shopNet
#      - sparknetwork
#      - ethnetwork
#    build:
#      context: .
#      dockerfile: owner.dockerfile
volumes:
  authData:
  shopData:
networks:

  authNet:
  shopNet: